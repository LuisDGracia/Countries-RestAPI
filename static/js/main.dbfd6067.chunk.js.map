{"version":3,"sources":["axios-orders.js","components/UI/RenderInfoStyled.jsx","components/UI/RenderInfo.jsx","styles/mediaQueries.js","components/Cards/Card/CardStyle.jsx","components/Cards/Card/Card.jsx","components/Cards/CardsStyled.jsx","components/Cards/Cards.jsx","components/Content/ContentStyled.jsx","components/Content/Content.jsx","components/FIlters/FiltersStyled.jsx","components/FIlters/Filters.jsx","components/Header/HeaderStyled.jsx","styles/theme.js","AppProvider.js","components/Header/Header.jsx","components/County_Info/CountryInfoStyled.jsx","components/County_Info/CountryInfo.jsx","components/Layout/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","process","REACT_APP_COUNTRIES","Info","styled","p","theme","colors","Text","Data","span","Borders","Elements","RenderInfo","info","array","history","useHistory","CountryInfo","domains","currencies","borders","Object","entries","key","value","number","toLocaleString","replaceAll","push","map","index","style","textTransform","name","onClick","alpha","countryName","get","then","country","data","onClickHandler","undefined","gridColumn","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","Container","div","Flag","img","Name","InfoContainer","FlagContainer","Card","flag","clicked","src","loading","alt","Cards","countries","useState","prev","next","count","setCount","hasMore","setHasMore","slice","current","setCurrent","dataLength","length","setTimeout","console","log","concat","prevState","loader","width","textAlign","display","justifyContent","flexFlow","to","population","region","capital","Background","Content","SearchContainer","Input","input","attrs","type","placeholder","Continents","select","Continent","option","ContinentsConteiner","Filters","setData","original","icon","onChange","inputValue","document","getElementById","toLowerCase","filteredCountries","filter","includes","SearchCountry","id","continent","newCountries","catch","error","UpdateCountries","disabled","HeaderStyle","header","Toggler","label","ThemeChanger","lightTheme","mode","transition","darkTheme","AppContext","createContext","AppProvider","children","themeMode","setThemeMode","toggleTheme","costumeTheme","Provider","Header","useContext","htmlFor","BackBtn","DataContainer","H2","h2","params","useParams","setCountry","useEffect","textDecoration","nativeName","subregion","topLevelDomain","Layout","setCountries","setFilter","path","exact","App","library","add","faSun","faMoon","faSearch","faChevronDown","faArrowLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dbfd6067.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  // No deberia dejar la url aqui\r\n  baseURL: process.env.REACT_APP_COUNTRIES || \"https://restcountries.eu/rest/v2/\"\r\n});\r\n\r\nexport default instance","import styled from 'styled-components'\r\n\r\n\r\nconst Info = styled.p`\r\n  margin: 0;\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst Data = styled.span`\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Borders = styled.span`\r\n  width: 80px;\r\n  margin-top: 10px;\r\n  margin-left: 5px;\r\n  padding: 5px;\r\n  background-color: ${ ({theme}) => theme.colors.Elements };\r\n  text-align: center;\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.2);\r\n  display: inline-block;\r\n  cursor: pointer;\r\n\r\n  grid-colum: 1 / -1;\r\n  grid-row: 5 / 6\r\n\r\n  ${Data}{\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nexport{Info, Data, Borders}\r\n","import React, { Fragment } from 'react'\r\nimport { Info, Data, Borders } from './RenderInfoStyled'\r\nimport axios from '../../axios-orders'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction RenderInfo({ info, array }) {\r\n\r\n  let history = useHistory();\r\n  const CountryInfo = []\r\n  let domains = [];\r\n  let currencies = [];\r\n  let borders = []\r\n\r\n  const onClickHandler = ( alpha ) => {\r\n    \r\n    let countryName = \"\"\r\n\r\n    axios.get(`/alpha/${alpha}`)\r\n      .then( country => {\r\n        countryName = country.data.name\r\n\r\n        history.push(`/${countryName}`)\r\n      })\r\n  }\r\n  \r\n    \r\n  for( let [key, value] of Object.entries(info) ){\r\n\r\n    let number = value\r\n\r\n    if( typeof number === 'number' ){\r\n      number = value.toLocaleString();\r\n      number = number.replaceAll('.',',')\r\n    }\r\n    CountryInfo.push(<Info key={key} >{key}: <Data key={number}>{ number }</Data></Info>)\r\n  }\r\n\r\n\r\n  // If array prop is present, do this code\r\n  if( array ){\r\n    for( let [key, value] of Object.entries(array)){\r\n      value.map( index => {\r\n        switch( key ){\r\n          case 'Top Level Domain':\r\n              domains.push(<Data key={index} style={{ textTransform: 'none' }} >{index}</Data>)\r\n            break;\r\n          case 'Currencies':\r\n            currencies.push(<Data key={index.name} >{`${index.name} `}</Data>)\r\n            break;\r\n          case 'Borders':\r\n              borders.push(\r\n                <Borders key={index} onClick={ () => onClickHandler(index) } >\r\n                  <Data key={index} >{index}</Data>\r\n                </Borders>\r\n              );\r\n            break;\r\n          default:\r\n          break;\r\n        }\r\n        return false;\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n  return (\r\n    <Fragment>\r\n      {CountryInfo}\r\n      {\r\n        array === undefined ? <></> :\r\n        <Fragment>\r\n          <Info >Top Level Domain: {domains} </Info>\r\n          <Info >Currencies: {currencies} </Info>\r\n          <Info style={{ gridColumn: '1/-1' }} >Borders Countries: {borders} </Info>\r\n        </Fragment>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RenderInfo\r\n","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"426px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(max-width: ${size.mobileS})`,\r\n  mobileM: `(max-width: ${size.mobileM})`,\r\n  mobileL: `(max-width: ${size.mobileL})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  laptopL: `(max-width: ${size.laptopL})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n  desktopL: `(max-width: ${size.desktop})`,\r\n};","import styled from 'styled-components'\r\nimport { device } from '../../../styles/mediaQueries';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  max-height: 300px;\r\n  margin-bottom: 40px;\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.3);\r\n  border-radius: 5px;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n\r\n  &:hover{\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Flag = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 5px 5px 0 0;\r\n`\r\n\r\nconst Name = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: ${ ({ theme }) => theme.colors.Text }\r\n`\r\nconst InfoContainer = styled.div`\r\n  height: 50%;\r\n  padding-left: 20px;\r\n`\r\n\r\nconst FlagContainer = styled.div`\r\n  width: 100%;\r\n  height: 50%;\r\n`\r\n\r\nexport{ Container, Flag, Name, InfoContainer, FlagContainer }","import React from 'react'\r\nimport RenderInfo from '../../UI/RenderInfo'\r\nimport { Container, Flag, Name, FlagContainer, InfoContainer } from './CardStyle'\r\n\r\nfunction Card({ flag, name, info, clicked }) {  \r\n  return (\r\n    <Container onClick={ clicked } >\r\n      <FlagContainer>\r\n       <Flag src={flag} loading=\"lazy\" alt={`${name} flag`} />\r\n      </FlagContainer>\r\n      <InfoContainer>\r\n        <Name>{name}</Name>\r\n        <RenderInfo info={info} />\r\n      </InfoContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/mediaQueries'\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n\r\n  a{\r\n    width: 21%;\r\n    text-decoration: none;\r\n\r\n    \r\n    @media${device.tablet}{\r\n      width: 45%;\r\n    }\r\n    \r\n    @media${device.mobileL}{\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport {Container}","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Card from './Card/Card'\r\nimport { Container } from './CardsStyled'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nfunction Cards({ countries }) {\r\n\r\n\tconst [count, setCount] = useState({\r\n\t\tprev: 0,\r\n\t\tnext: 12,\r\n\t})\r\n\tconst [hasMore, setHasMore] = useState(true)\r\n\tconst [current, setCurrent] = useState(countries.slice(count.prev, count.next))\r\n\t\r\n\tconst getMoreData = () => {\r\n\t\tif( current.length === countries.length ){\r\n\t\t\tsetHasMore( false );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tconsole.log( current )\r\n\t\t\tsetCurrent(current.concat(countries.slice(count.prev + 12, count.next + 12)))\r\n\t\t}, 2000)\r\n\t\tsetCount( prevState => ({ prev: prevState.prev + 12, next: prevState.next + 12 }))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<InfiniteScroll\r\n\t\t\tdataLength={current.length}\r\n\t\t\tnext={getMoreData}\r\n\t\t\thasMore={hasMore}\r\n\t\t\tloader={<h2 style={{width: '100%', textAlign: 'center' }}>Loading...</h2>}\r\n\t\t\tstyle={{ display: 'flex', justifyContent:'space-between', flexFlow: 'row wrap' }} >\r\n\t\t\t\t{current.map( country => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<Link to={`/${country.name}`} key={country.name}>\r\n\t\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\t\tflag={ country.flag } \r\n\t\t\t\t\t\t\t\tname={ country.name } \r\n\t\t\t\t\t\t\t\tinfo={{ \r\n\t\t\t\t\t\t\t\t\t'population': country.population, \r\n\t\t\t\t\t\t\t\t\t'region': country.region, \r\n\t\t\t\t\t\t\t\t\t'capital': country.capital \r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tkey={ country.name } />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</InfiniteScroll>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Cards\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 40px;\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n`","import React from 'react'\r\nimport Cards from '../Cards/Cards';\r\nimport { Container } from './ContentStyled';\r\n\r\nfunction Content({ countries }) {\r\n  return (\r\n    <Container>\r\n      { countries.length === 0 ? \r\n        (<p>Loading...</p>) :\r\n        <Cards countries = {countries} />\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Content\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/mediaQueries'\r\n\r\nconst Container = styled.div`\r\n  padding: 40px;\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n`\r\n\r\nconst SearchContainer = styled.div`\r\n  width: 35%;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.2);\r\n\r\n  @media${device.tablet}{\r\n    width: 100%;\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n  }\r\n`\r\n\r\nconst Input = styled.input.attrs( () => ({ type: 'text', placeholder: 'Search for a country...' }))`\r\n  width: 90%;\r\n  background: none;\r\n  border: none;\r\n  margin: 5px 0px;\r\n  padding: 0 20px;\r\n\r\n  &:focus{\r\n    outline:none;\r\n    color: ${ ({ theme }) => theme.colors.Text };\r\n  }\r\n\r\n  &::placeholder{\r\n    color: ${ ({ theme }) => theme.colors.Text };\r\n  }\r\n\r\n  @media${device.tablet}{\r\n    \r\n  }\r\n\r\n`\r\n\r\nconst Continents = styled.select`\r\n  padding: 15px;\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  border-color: ${ ({ theme }) => theme.colors.Elements };\r\n  cursor: pointer;\r\n  \r\n  border-radius: 5px;\r\n\r\n  // Arrow\r\n  appearance: none;\r\n\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n\r\n  &:hover{\r\n    outline: none;\r\n  }\r\n\r\n  @media${device.tablet}{\r\n    align-self: start;\r\n  }\r\n`\r\n\r\nconst Continent = styled.option`\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n`\r\nconst ContinentsConteiner = styled.div`\r\n  cursor: pointer;\r\n  padding-right: 10px;\r\n  border-radius: 5px;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.2);\r\n`\r\n\r\nexport { Container, SearchContainer, Input, Continents, Continent, ContinentsConteiner }","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from '../../axios-orders'\r\nimport React from 'react'\r\nimport { Container, Continent, Continents, ContinentsConteiner, Input, SearchContainer } from './FiltersStyled'\r\n\r\nfunction Filters({ data, setData }) {\r\n\r\n  const countries = data.original;\r\n\r\n  const UpdateCountries = () => {\r\n\r\n    let continent = document.getElementById('mySelect').value\r\n\r\n    if( continent !== 'all' ){\r\n      axios.get(`/region/${continent}`)\r\n      .then( countries => {\r\n        let newCountries = countries.data;\r\n        setData.filter( newCountries )\r\n      })\r\n      .catch( error => error );\r\n    }else{\r\n      axios.get(`/${continent}`)\r\n      .then( countries => {\r\n        let newCountries = countries.data;\r\n        setData.filter( newCountries )\r\n      })\r\n      .catch( error => error );\r\n    }\r\n\r\n  }\r\n\r\n  const SearchCountry = () => {\r\n    \r\n    let inputValue = document.getElementById('country').value.toLowerCase()\r\n    let filteredCountries = []\r\n\r\n    if( inputValue !== ''){\r\n      filteredCountries.push(\r\n        countries.filter( country => {\r\n          let countryLower = country.name.toLowerCase()\r\n          if( countryLower.includes(inputValue) ){\r\n            return country;\r\n          }else return false;\r\n        })\r\n      );\r\n      setData.filter( ...filteredCountries );\r\n    }else if( inputValue === '' ){\r\n      setData.filter( countries )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SearchContainer>\r\n        <FontAwesomeIcon icon={ 'search' } />\r\n        <Input onChange={ () => SearchCountry() } id='country' />\r\n      </SearchContainer>\r\n\r\n      <ContinentsConteiner >\r\n        <Continents onChange={ () => UpdateCountries() } id=\"mySelect\" >\r\n          <Continent disabled >Filter By Continent</Continent>\r\n          <Continent value='all' >All</Continent>\r\n          <Continent value='africa' >Africa</Continent>\r\n          <Continent value='americas' >Americas</Continent>\r\n          <Continent value='asia' >Asia</Continent>\r\n          <Continent value='europe' >Europe</Continent>\r\n          <Continent value='oceania' >Oceania</Continent>\r\n        </Continents>\r\n        <FontAwesomeIcon icon={ 'chevron-down' } />\r\n      </ContinentsConteiner>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/mediaQueries';\r\n\r\nconst HeaderStyle = styled.header`\r\n  position:relative;\r\n  z-index:10;\r\n  height: 70px;\r\n  padding: 0 40px;\r\n  background-color: ${({ theme }) => theme.colors.Elements };\r\n  box-shadow: 0 0px 10px hsla(0, 0%, 0%, 0.2);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  h1{\r\n    color: ${ ({ theme }) => theme.colors.Text };\r\n\r\n    @media${device.tablet}{\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`\r\n\r\nconst Toggler = styled.label`\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n\r\n  svg{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  &:hover{\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ThemeChanger = styled.div``\r\n\r\nconst Input = styled.input.attrs( () => ( {type: 'checkbox'} ))`\r\n  visibility: hidden;\r\n`\r\n\r\nexport{ HeaderStyle, Toggler, ThemeChanger, Input }\r\n","const theme = {\r\n  lightTheme: {\r\n    colors: {\r\n      Text: \"hsl(200, 15%, 8%)\",\r\n      Elements: \"hsl(0, 0%, 100%)\",\r\n      Background: \"hsl(0, 0%, 98%)\",\r\n      Input: \"hsl(0, 0%, 52%)\",\r\n    },\r\n    mode: \" Mode Dark\",\r\n    icon: \"moon\",\r\n    transition: \"0.5s\",\r\n  },\r\n  darkTheme: {\r\n    colors: {\r\n      Text: \"hsl(0, 0%, 100%)\",\r\n      Elements: \"hsl(209, 23%, 22%)\",\r\n      Background: \"hsl(207, 26%, 17%)\",\r\n    },\r\n    icon: \"sun\",\r\n    mode: \"Light Mode\",\r\n    transition: \"0.5s\",\r\n  },\r\n};\r\n\r\nexport default theme;","import React, { createContext, useState } from 'react'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport theme from './styles/theme'\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [ themeMode, setThemeMode ] = useState(\"lightTheme\");\r\n  const toggleTheme = () => {\r\n    setThemeMode((prevState) => {\r\n      if (prevState === \"lightTheme\") {\r\n        return \"darkTheme\";\r\n      } else {\r\n        return \"lightTheme\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const value = { themeMode, toggleTheme };\r\n  const costumeTheme = theme[themeMode];\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      <ThemeProvider theme={costumeTheme}>\r\n        {children}\r\n      </ThemeProvider>\r\n    </AppContext.Provider>)\r\n}\r\n\r\nexport default AppProvider;","import React, { useContext } from 'react'\r\nimport { HeaderStyle, ThemeChanger, Input, Toggler } from './HeaderStyled'\r\nimport { AppContext } from '../../AppProvider';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport theme from '../../styles/theme'\r\n\r\nfunction Header() {\r\n\r\n  const { toggleTheme, themeMode } = useContext(AppContext);\r\n\r\n  return (\r\n    <HeaderStyle>\r\n      <h1>Where in the world?</h1>\r\n\r\n      <ThemeChanger>\r\n        <Input id=\"Theme\" onChange={ toggleTheme } />\r\n        <Toggler htmlFor=\"Theme\" >\r\n          <FontAwesomeIcon icon={ theme[themeMode].icon } />\r\n          { theme[themeMode].mode }\r\n        </Toggler>\r\n      </ThemeChanger> \r\n    </HeaderStyle>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/mediaQueries'\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  min-height: calc(100vh - 70px);\r\n  padding: 40px;\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n`\r\nconst InfoContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  \r\n  @media${device.tablet}{\r\n    margin-top: 40px;\r\n    flex-flow: column wrap;\r\n  }\r\n`\r\n\r\nconst FlagContainer = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n\r\n  @media${device.tablet}{\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Flag = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst BorderText = styled.p`\r\n  color: ${ ({theme}) => theme.colors.Text };\r\n`\r\n\r\nconst Borders = styled.div``\r\n\r\nconst BackBtn = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.3);\r\n  border-radius: 10px;\r\n\r\n  color: ${ ({theme}) => theme.colors.Text };\r\n\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-content: center;\r\n  cursor: pointer;\r\n\r\n  a{\r\n    color: ${ ({theme}) => theme.colors.Text };\r\n    text-decoration: none;\r\n  }\r\n\r\n  a:visited{\r\n    color: ${ ({theme}) => theme.colors.Text };\r\n  }\r\n`\r\n\r\nconst DataContainer = styled.div`\r\n  width:50%;\r\n  min-height: 100%;\r\n  padding-left: 40px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-tempplate-rows: auto;\r\n  grid-gap: 10px;\r\n\r\n  p{\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media${device.tablet}{\r\n    width: 100%;\r\n    padding-left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    p{\r\n      font-size: 18px;\r\n    }\r\n  }\r\n`\r\n\r\nconst H2 = styled.h2`\r\n  color: ${ ({theme}) => theme.colors.Text };\r\n  grid-column: 1/-1;\r\n`\r\n\r\nexport{ Container, FlagContainer, Flag, BorderText, Borders, BackBtn, InfoContainer, DataContainer, H2 }","import React, { useState, useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport axios from '../../axios-orders'\r\nimport RenderInfo from '../UI/RenderInfo'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Container, BackBtn, InfoContainer, FlagContainer, Flag, DataContainer, H2 } from './CountryInfoStyled'\r\n\r\n\r\nfunction CountryInfo() {\r\n\r\n  const params = useParams()\r\n  const [country, setCountry] = useState({})\r\n\r\n  useEffect(() => {\r\n    axios.get(`/name/${params.country}?fullText=true`)\r\n    .then( info => {\r\n      setCountry( ...info.data );\r\n    })\r\n    .catch( error => console.log( error ))\r\n\r\n    return () => {\r\n      setCountry({});\r\n    }\r\n\r\n  }, [params.country]);\r\n\r\n  return (\r\n    <Container>\r\n        <Link to=\"/\" style={{ textDecoration: 'none', width: '100px' }} >\r\n          <BackBtn>\r\n            <FontAwesomeIcon icon={ 'arrow-left' } />\r\n            Back \r\n          </BackBtn>\r\n        </Link>\r\n      { Object.entries(country).length === 0 ? (<p>Loading...</p>)\r\n        :\r\n        <InfoContainer>\r\n          <FlagContainer>\r\n            <Flag src={country.flag} />\r\n          </FlagContainer>\r\n          <DataContainer>\r\n            <H2>{country.name}</H2>\r\n            <RenderInfo \r\n              info={{\r\n                \"Native Name\": country.nativeName,\r\n                \"Population\": country.population,\r\n                \"Region\": country.region,\r\n                \"Sub Region\": country.subregion,\r\n                \"Capital\": country.capital,}} \r\n              array={{\r\n                \"Top Level Domain\": country.topLevelDomain,\r\n                \"Currencies\": country.currencies,\r\n                \"Borders\": country.borders }}  />\r\n          </DataContainer>\r\n        </InfoContainer>\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CountryInfo\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport axios from '../../axios-orders'\r\nimport Content from '../Content/Content'\r\nimport Filters from '../FIlters/Filters'\r\nimport Header from '../Header/Header'\r\nimport { Route } from 'react-router-dom'\r\nimport CountryInfo from '../County_Info/CountryInfo'\r\n\r\nfunction Layout() {\r\n\r\n  const [countries, setCountries] = useState([])\r\n  const [filter, setFilter] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('/all')\r\n      .then( info => {\r\n        setCountries( info.data );\r\n        setFilter( info.data );\r\n      })\r\n      .catch( error => error)\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Route path=\"/\" exact >\r\n        <Header />\r\n        <Filters \r\n          data={{ 'original': countries, 'filter': filter }} \r\n          setData={{ 'countries': setCountries, 'filter': setFilter }} />\r\n        <Content countries={filter} />\r\n      </Route>\r\n      <Route path=\"/:country\">\r\n        <Header />\r\n        <CountryInfo />\r\n      </Route>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import Layout from \"./components/Layout/Layout\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faSun, faMoon, faSearch, faChevronDown, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  library.add( faSun, faMoon, faSearch, faChevronDown, faArrowLeft );\r\n\r\n  return (\r\n    <Router >\r\n      <Layout />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'normalize.css'\r\nimport AppProvider from './AppProvider';\r\n\r\nReactDOM.render(\r\n  <AppProvider>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </AppProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}