{"version":3,"sources":["axios-orders.js","components/UI/RenderInfoStyled.jsx","components/UI/RenderInfo.jsx","styles/mediaQueries.js","components/Cards/Card/CardStyle.jsx","components/Cards/Card/Card.jsx","components/Cards/CardsStyled.jsx","components/Cards/Cards.jsx","components/Content/ContentStyled.jsx","components/Content/Content.jsx","components/FIlters/FiltersStyled.jsx","components/FIlters/Filters.jsx","components/Header/HeaderStyled.jsx","styles/theme.js","AppProvider.js","components/Header/Header.jsx","components/County_Info/CountryInfoStyled.jsx","components/County_Info/CountryInfo.jsx","components/Layout/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","process","REACT_APP_COUNTRIES","Info","styled","p","theme","colors","Text","Data","span","Borders","Elements","RenderInfo","info","array","CountryInfo","domains","currencies","borders","Object","entries","key","value","number","toLocaleString","replaceAll","push","map","index","style","textTransform","name","onClick","alpha","countryName","get","then","country","data","window","location","pathname","onClickHandler","undefined","gridColumn","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","Container","div","Flag","img","Name","InfoContainer","FlagContainer","Card","flag","clicked","src","loading","alt","Cards","countries","population","region","capital","Background","Content","length","SearchContainer","Input","input","attrs","type","placeholder","Continents","select","Continent","option","ContinentsConteiner","Filters","setData","original","icon","onChange","inputValue","document","getElementById","toLowerCase","filteredCountries","filter","includes","SearchCountry","id","continent","newCountries","catch","error","UpdateCountries","disabled","HeaderStyle","header","Toggler","label","ThemeChanger","lightTheme","mode","transition","darkTheme","AppContext","createContext","AppProvider","children","useState","themeMode","setThemeMode","toggleTheme","prevState","costumeTheme","Provider","Header","useContext","htmlFor","BackBtn","DataContainer","H2","h2","params","useParams","setCountry","useEffect","console","log","to","nativeName","subregion","topLevelDomain","Layout","setCountries","setFilter","path","exact","App","library","add","faSun","faMoon","faSearch","faChevronDown","faArrowLeft","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.14ceb73e.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  // No deberia dejar la url aqui\r\n  baseURL: process.env.REACT_APP_COUNTRIES || \"https://restcountries.eu/rest/v2/\"\r\n});\r\n\r\nexport default instance","import styled from 'styled-components'\r\n\r\n\r\nconst Info = styled.p`\r\n  margin: 0;\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst Data = styled.span`\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Borders = styled.span`\r\n  width: 80px;\r\n  margin-top: 10px;\r\n  margin-left: 5px;\r\n  padding: 5px;\r\n  background-color: ${ ({theme}) => theme.colors.Elements };\r\n  text-align: center;\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.2);\r\n  display: inline-block;\r\n  cursor: pointer;\r\n\r\n  grid-colum: 1 / -1;\r\n  grid-row: 5 / 6\r\n\r\n  ${Data}{\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nexport{Info, Data, Borders}\r\n","import React, { Fragment } from 'react'\r\nimport { Info, Data, Borders } from './RenderInfoStyled'\r\nimport axios from '../../axios-orders'\r\n\r\nfunction RenderInfo({ info, array }) {\r\n\r\n  const CountryInfo = []\r\n  let domains = [];\r\n  let currencies = [];\r\n  let borders = []\r\n\r\n  const onClickHandler = ( alpha ) => {\r\n    \r\n    let countryName = \"\"\r\n\r\n    axios.get(`/alpha/${alpha}`)\r\n      .then( country => {\r\n        countryName = country.data.name\r\n        window.location.pathname = `/${countryName}`\r\n      })\r\n  }\r\n  \r\n    \r\n  for( let [key, value] of Object.entries(info) ){\r\n\r\n    let number = value\r\n\r\n    if( typeof number === 'number' ){\r\n      number = value.toLocaleString();\r\n      number = number.replaceAll('.',',')\r\n    }\r\n    CountryInfo.push(<Info key={key} >{key}: <Data key={number}>{ number }</Data></Info>)\r\n  }\r\n\r\n\r\n  // If array prop is present, do this code\r\n  if( array ){\r\n    for( let [key, value] of Object.entries(array)){\r\n      value.map( index => {\r\n        switch( key ){\r\n          case 'Top Level Domain':\r\n              domains.push(<Data key={index} style={{ textTransform: 'none' }} >{index}</Data>)\r\n            break;\r\n          case 'Currencies':\r\n            currencies.push(<Data key={index.name} >{`${index.name} `}</Data>)\r\n            break;\r\n          case 'Borders':\r\n              borders.push(<Borders key={index} onClick={ () => onClickHandler(index) } ><Data key={index} >{index}</Data></Borders>);\r\n            break;\r\n          default:\r\n          break;\r\n        }\r\n        return false;\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n  return (\r\n    <Fragment>\r\n      {CountryInfo}\r\n      {\r\n        array === undefined ? <></> :\r\n        <Fragment>\r\n          <Info >Top Level Domain: {domains} </Info>\r\n          <Info >Currencies: {currencies} </Info>\r\n          <Info style={{ gridColumn: '1/-1' }} >Borders Countries: {borders} </Info>\r\n        </Fragment>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RenderInfo\r\n","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"426px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(max-width: ${size.mobileS})`,\r\n  mobileM: `(max-width: ${size.mobileM})`,\r\n  mobileL: `(max-width: ${size.mobileL})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  laptopL: `(max-width: ${size.laptopL})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n  desktopL: `(max-width: ${size.desktop})`,\r\n};","import styled from 'styled-components'\r\nimport { device } from '../../../styles/mediaQueries';\r\n\r\nconst Container = styled.div`\r\n  width: 21%;\r\n  height: 300px;\r\n  max-height: 300px;\r\n  margin-bottom: 40px;\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.3);\r\n  border-radius: 5px;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n\r\n  &:hover{\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media${device.tablet}{\r\n    width: 45%;\r\n  }\r\n  \r\n  @media${device.mobileL}{\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Flag = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 5px 5px 0 0;\r\n`\r\n\r\nconst Name = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: ${ ({ theme }) => theme.colors.Text }\r\n`\r\nconst InfoContainer = styled.div`\r\n  height: 50%;\r\n  padding-left: 20px;\r\n`\r\n\r\nconst FlagContainer = styled.div`\r\n  width: 100%;\r\n  height: 50%;\r\n`\r\n\r\nexport{ Container, Flag, Name, InfoContainer, FlagContainer }","import React from 'react'\r\nimport RenderInfo from '../../UI/RenderInfo'\r\nimport { Container, Flag, Name, FlagContainer, InfoContainer } from './CardStyle'\r\n\r\nfunction Card({ flag, name, info, clicked }) {  \r\n  return (\r\n    <Container onClick={ clicked } >\r\n      <FlagContainer>\r\n       <Flag src={flag} loading=\"lazy\" alt={`${name} flag`} />\r\n      </FlagContainer>\r\n      <InfoContainer>\r\n        <Name>{name}</Name>\r\n        <RenderInfo info={info} />\r\n      </InfoContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-flow: row wrap;\r\n`\r\n\r\nexport {Container}","import React from 'react'\r\nimport Card from './Card/Card'\r\nimport { Container } from './CardsStyled'\r\n\r\nfunction Cards({ countries }) {\r\n\r\n  const LoadCountryInfo = ( name ) => {\r\n    window.location.pathname = `/${name}`\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {countries.map( country => {\r\n        return(\r\n          <Card \r\n            flag={ country.flag } \r\n            name={ country.name } \r\n            info={{ \r\n              'population': country.population, \r\n              'region': country.region, \r\n              'capital': country.capital \r\n            }}\r\n            key={ country.name } \r\n            clicked={ () => LoadCountryInfo( country.name )  } />\r\n        )\r\n      })}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 40px;\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n`","import React from 'react'\r\nimport Cards from '../Cards/Cards';\r\nimport { Container } from './ContentStyled';\r\n\r\nfunction Content({ countries }) {\r\n  return (\r\n    <Container>\r\n      { countries.length === 0 ? \r\n        (<p>Loading...</p>) :\r\n        <Cards countries = {countries} />\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Content\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/mediaQueries'\r\n\r\nconst Container = styled.div`\r\n  padding: 40px;\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n`\r\n\r\nconst SearchContainer = styled.div`\r\n  width: 35%;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.2);\r\n\r\n  @media${device.tablet}{\r\n    width: 100%;\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n  }\r\n`\r\n\r\nconst Input = styled.input.attrs( () => ({ type: 'text', placeholder: 'Search for a country...' }))`\r\n  width: 90%;\r\n  background: none;\r\n  border: none;\r\n  margin: 5px 0px;\r\n  padding: 0 20px;\r\n\r\n  &:focus{\r\n    outline:none;\r\n    color: ${ ({ theme }) => theme.colors.Text };\r\n  }\r\n\r\n  &::placeholder{\r\n    color: ${ ({ theme }) => theme.colors.Text };\r\n  }\r\n\r\n  @media${device.tablet}{\r\n    \r\n  }\r\n\r\n`\r\n\r\nconst Continents = styled.select`\r\n  padding: 15px;\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  border-color: ${ ({ theme }) => theme.colors.Elements };\r\n  cursor: pointer;\r\n  \r\n  border-radius: 5px;\r\n\r\n  // Arrow\r\n  appearance: none;\r\n\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n\r\n  &:hover{\r\n    outline: none;\r\n  }\r\n\r\n  @media${device.tablet}{\r\n    align-self: start;\r\n  }\r\n`\r\n\r\nconst Continent = styled.option`\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n`\r\nconst ContinentsConteiner = styled.div`\r\n  cursor: pointer;\r\n  padding-right: 10px;\r\n  border-radius: 5px;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.2);\r\n`\r\n\r\nexport { Container, SearchContainer, Input, Continents, Continent, ContinentsConteiner }","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from '../../axios-orders'\r\nimport React from 'react'\r\nimport { Container, Continent, Continents, ContinentsConteiner, Input, SearchContainer } from './FiltersStyled'\r\n\r\nfunction Filters({ data, setData }) {\r\n\r\n  const countries = data.original;\r\n\r\n  const UpdateCountries = () => {\r\n\r\n    let continent = document.getElementById('mySelect').value\r\n\r\n    if( continent !== 'all' ){\r\n      axios.get(`/region/${continent}`)\r\n      .then( countries => {\r\n        let newCountries = countries.data;\r\n        setData.filter( newCountries )\r\n      })\r\n      .catch( error => error );\r\n    }else{\r\n      axios.get(`/${continent}`)\r\n      .then( countries => {\r\n        let newCountries = countries.data;\r\n        setData.filter( newCountries )\r\n      })\r\n      .catch( error => error );\r\n    }\r\n\r\n  }\r\n\r\n  const SearchCountry = () => {\r\n    \r\n    let inputValue = document.getElementById('country').value.toLowerCase()\r\n    let filteredCountries = []\r\n\r\n    if( inputValue !== ''){\r\n      filteredCountries.push(\r\n        countries.filter( country => {\r\n          let countryLower = country.name.toLowerCase()\r\n          if( countryLower.includes(inputValue) ){\r\n            return country;\r\n          }else return false;\r\n        })\r\n      );\r\n      setData.filter( ...filteredCountries );\r\n    }else if( inputValue === '' ){\r\n      setData.filter( countries )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SearchContainer>\r\n        <FontAwesomeIcon icon={ 'search' } />\r\n        <Input onChange={ () => SearchCountry() } id='country' />\r\n      </SearchContainer>\r\n\r\n      <ContinentsConteiner >\r\n        <Continents onChange={ () => UpdateCountries() } id=\"mySelect\" >\r\n          <Continent disabled >Filter By Continent</Continent>\r\n          <Continent value='all' >All</Continent>\r\n          <Continent value='africa' >Africa</Continent>\r\n          <Continent value='americas' >Americas</Continent>\r\n          <Continent value='asia' >Asia</Continent>\r\n          <Continent value='europe' >Europe</Continent>\r\n          <Continent value='oceania' >Oceania</Continent>\r\n        </Continents>\r\n        <FontAwesomeIcon icon={ 'chevron-down' } />\r\n      </ContinentsConteiner>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/mediaQueries';\r\n\r\nconst HeaderStyle = styled.header`\r\n  position:relative;\r\n  z-index:10;\r\n  height: 70px;\r\n  padding: 0 40px;\r\n  background-color: ${({ theme }) => theme.colors.Elements };\r\n  box-shadow: 0 0px 10px hsla(0, 0%, 0%, 0.2);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  h1{\r\n    color: ${ ({ theme }) => theme.colors.Text };\r\n\r\n    @media${device.tablet}{\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`\r\n\r\nconst Toggler = styled.label`\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n\r\n  svg{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  &:hover{\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ThemeChanger = styled.div``\r\n\r\nconst Input = styled.input.attrs( () => ( {type: 'checkbox'} ))`\r\n  visibility: hidden;\r\n`\r\n\r\nexport{ HeaderStyle, Toggler, ThemeChanger, Input }\r\n","const theme = {\r\n  lightTheme: {\r\n    colors: {\r\n      Text: \"hsl(200, 15%, 8%)\",\r\n      Elements: \"hsl(0, 0%, 100%)\",\r\n      Background: \"hsl(0, 0%, 98%)\",\r\n      Input: \"hsl(0, 0%, 52%)\",\r\n    },\r\n    mode: \" Mode Dark\",\r\n    icon: \"moon\",\r\n    transition: \"0.5s\",\r\n  },\r\n  darkTheme: {\r\n    colors: {\r\n      Text: \"hsl(0, 0%, 100%)\",\r\n      Elements: \"hsl(209, 23%, 22%)\",\r\n      Background: \"hsl(207, 26%, 17%)\",\r\n    },\r\n    icon: \"sun\",\r\n    mode: \"Light Mode\",\r\n    transition: \"0.5s\",\r\n  },\r\n};\r\n\r\nexport default theme;","import React, { createContext, useState } from 'react'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport theme from './styles/theme'\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [ themeMode, setThemeMode ] = useState(\"lightTheme\");\r\n  const toggleTheme = () => {\r\n    setThemeMode((prevState) => {\r\n      if (prevState === \"lightTheme\") {\r\n        return \"darkTheme\";\r\n      } else {\r\n        return \"lightTheme\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const value = { themeMode, toggleTheme };\r\n  const costumeTheme = theme[themeMode];\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      <ThemeProvider theme={costumeTheme}>\r\n        {children}\r\n      </ThemeProvider>\r\n    </AppContext.Provider>)\r\n}\r\n\r\nexport default AppProvider;","import React, { useContext } from 'react'\r\nimport { HeaderStyle, ThemeChanger, Input, Toggler } from './HeaderStyled'\r\nimport { AppContext } from '../../AppProvider';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport theme from '../../styles/theme'\r\n\r\nfunction Header() {\r\n\r\n  const { toggleTheme, themeMode } = useContext(AppContext);\r\n\r\n  return (\r\n    <HeaderStyle>\r\n      <h1>Where in the world?</h1>\r\n\r\n      <ThemeChanger>\r\n        <Input id=\"Theme\" onChange={ toggleTheme } />\r\n        <Toggler htmlFor=\"Theme\" >\r\n          <FontAwesomeIcon icon={ theme[themeMode].icon } />\r\n          { theme[themeMode].mode }\r\n        </Toggler>\r\n      </ThemeChanger> \r\n    </HeaderStyle>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/mediaQueries'\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  min-height: calc(100vh - 70px);\r\n  padding: 40px;\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n`\r\nconst InfoContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  \r\n  @media${device.tablet}{\r\n    margin-top: 40px;\r\n    flex-flow: column wrap;\r\n  }\r\n`\r\n\r\nconst FlagContainer = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n\r\n  @media${device.tablet}{\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Flag = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst BorderText = styled.p`\r\n  color: ${ ({theme}) => theme.colors.Text };\r\n`\r\n\r\nconst Borders = styled.div``\r\n\r\nconst BackBtn = styled.div`\r\n  width: 100px;\r\n  padding: 10px 0;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.3);\r\n  border-radius: 10px;\r\n\r\n  color: ${ ({theme}) => theme.colors.Text };\r\n\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-content: center;\r\n  cursor: pointer;\r\n\r\n  a{\r\n    color: ${ ({theme}) => theme.colors.Text };\r\n    text-decoration: none;\r\n  }\r\n\r\n  a:visited{\r\n    color: ${ ({theme}) => theme.colors.Text };\r\n  }\r\n`\r\n\r\nconst DataContainer = styled.div`\r\n  width:50%;\r\n  min-height: 100%;\r\n  padding-left: 40px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-tempplate-rows: auto;\r\n  grid-gap: 10px;\r\n\r\n  p{\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media${device.tablet}{\r\n    width: 100%;\r\n    padding-left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    p{\r\n      font-size: 18px;\r\n    }\r\n  }\r\n`\r\n\r\nconst H2 = styled.h2`\r\n  color: ${ ({theme}) => theme.colors.Text };\r\n  grid-column: 1/-1;\r\n`\r\n\r\nexport{ Container, FlagContainer, Flag, BorderText, Borders, BackBtn, InfoContainer, DataContainer, H2 }","import React, { useState, useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport axios from '../../axios-orders'\r\nimport RenderInfo from '../UI/RenderInfo'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Container, BackBtn, InfoContainer, FlagContainer, Flag, DataContainer, H2 } from './CountryInfoStyled'\r\n\r\n\r\nfunction CountryInfo() {\r\n\r\n  const params = useParams()\r\n  const [country, setCountry] = useState({})\r\n\r\n  useEffect(() => {\r\n    axios.get(`/name/${params.country}?fullText=true`)\r\n    .then( info => {\r\n      setCountry( ...info.data );\r\n    })\r\n    .catch( error => console.log( error ))\r\n\r\n    return () => {\r\n      setCountry({});\r\n    }\r\n\r\n  }, [params.country]);\r\n\r\n  const GoBackHandler = () => {\r\n      window.location.pathname = `/`\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <BackBtn onClick={ GoBackHandler } >\r\n        <FontAwesomeIcon icon={ 'arrow-left' } />\r\n        <Link to=\"/\" > Back </Link>\r\n      </BackBtn>\r\n      { Object.entries(country).length === 0 ? (<p>Loading...</p>)\r\n        :\r\n        <InfoContainer>\r\n          <FlagContainer>\r\n            <Flag src={country.flag} />\r\n          </FlagContainer>\r\n          <DataContainer>\r\n            <H2>{country.name}</H2>\r\n            <RenderInfo \r\n              info={{\r\n                \"Native Name\": country.nativeName,\r\n                \"Population\": country.population,\r\n                \"Region\": country.region,\r\n                \"Sub Region\": country.subregion,\r\n                \"Capital\": country.capital,}} \r\n              array={{\r\n                \"Top Level Domain\": country.topLevelDomain,\r\n                \"Currencies\": country.currencies,\r\n                \"Borders\": country.borders }}  />\r\n          </DataContainer>\r\n        </InfoContainer>\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CountryInfo\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport axios from '../../axios-orders'\r\nimport Content from '../Content/Content'\r\nimport Filters from '../FIlters/Filters'\r\nimport Header from '../Header/Header'\r\nimport { Route } from 'react-router-dom'\r\nimport CountryInfo from '../County_Info/CountryInfo'\r\n\r\nfunction Layout() {\r\n\r\n  const [countries, setCountries] = useState([])\r\n  const [filter, setFilter] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('/all')\r\n      .then( info => {\r\n        setCountries( info.data );\r\n        setFilter( info.data );\r\n      })\r\n      .catch( error => error)\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Route path={`${process.env.PUBLIC_URL}/`} exact >\r\n        <Header />\r\n        <Filters \r\n          data={{ 'original': countries, 'filter': filter }} \r\n          setData={{ 'countries': setCountries, 'filter': setFilter }} />\r\n        <Content countries={filter} />\r\n      </Route>\r\n      <Route path={`${process.env.PUBLIC_URL}/:country`}>\r\n        <Header />\r\n        <CountryInfo />\r\n      </Route>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import Layout from \"./components/Layout/Layout\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSun, faMoon, faSearch, faChevronDown, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n\n  library.add( faSun, faMoon, faSearch, faChevronDown, faArrowLeft );\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n      <Layout />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'normalize.css'\nimport AppProvider from './AppProvider';\n\nReactDOM.render(\n  <AppProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </AppProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}