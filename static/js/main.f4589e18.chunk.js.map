{"version":3,"sources":["components/Content/ContentStyled.jsx","styles/mediaQueries.js","components/Cards/CardsStyled.jsx","components/Cards/Card/CardStyle.jsx","components/UI/RenderInfoStyled.jsx","axios-orders.js","components/UI/RenderInfo.jsx","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","Context/CountryContext.jsx","components/Content/Content.jsx","components/FIlters/FiltersStyled.jsx","components/FIlters/Filters.jsx","components/Header/HeaderStyled.jsx","styles/theme.js","AppProvider.js","components/Header/Header.jsx","components/County_Info/CountryInfoStyled.jsx","components/County_Info/CountryInfo.jsx","components/Layout/Layout.jsx","Context/CountryReducer.jsx","Context/CountryState.jsx","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","theme","colors","Background","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","Elements","Name","img","p","Text","InfoContainer","FlagContainer","flagUrl","Info","Data","span","Borders","instance","axios","create","baseURL","process","REACT_APP_COUNTRIES","RenderInfo","info","array","history","useHistory","CountryInfo","domains","currencies","borders","Object","entries","key","value","number","toLocaleString","replaceAll","push","map","index","style","textTransform","name","onClick","alpha","countryName","get","then","data","onClickHandler","undefined","gridColumn","memo","flag","to","alt","Cards","countries","useState","prev","next","count","setCount","hasMore","setHasMore","slice","current","setCurrent","useEffect","dataLength","length","setTimeout","concat","prevState","loader","width","textAlign","display","justifyContent","flexWrap","country","i","population","region","capital","CountryContext","createContext","Content","useContext","SearchContainer","Input","input","attrs","type","placeholder","Continents","select","Continent","option","ContinentsConteiner","getCountry","getCountriesByContinent","icon","onChange","event","id","disabled","HeaderStyle","header","Toggler","label","ThemeChanger","lightTheme","mode","transition","darkTheme","AppContext","AppProvider","children","themeMode","setThemeMode","toggleTheme","costumeTheme","Provider","htmlFor","Flag","BackBtn","DataContainer","H2","h2","params","useParams","setCountry","catch","error","console","log","textDecoration","src","nativeName","subregion","topLevelDomain","Layout","getCountries","path","exact","CountryReducer","state","payload","continent","original","filtered","initialState","CountryState","useReducer","dispatch","target","App","library","add","faSun","faMoon","faSearch","faChevronDown","faArrowLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4589e18.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 40px;\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n`","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"426px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(max-width: ${size.mobileS})`,\r\n  mobileM: `(max-width: ${size.mobileM})`,\r\n  mobileL: `(max-width: ${size.mobileL})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  laptopL: `(max-width: ${size.laptopL})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n  desktopL: `(max-width: ${size.desktop})`,\r\n};","import styled from 'styled-components'\r\nimport { device } from '../../styles/mediaQueries'\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n\r\n  a{\r\n    width: 21%;\r\n    text-decoration: none;\r\n\r\n    \r\n    @media${device.tablet}{\r\n      width: 45%;\r\n    }\r\n    \r\n    @media${device.mobileL}{\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport {Container}","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  max-height: 300px;\r\n  margin-bottom: 40px;\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.3);\r\n  border-radius: 5px;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n\r\n  &:hover{\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Flag = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 5px 5px 0 0;\r\n`\r\n\r\nconst Name = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: ${ ({ theme }) => theme.colors.Text }\r\n`\r\nconst InfoContainer = styled.div`\r\n  height: 50%;\r\n  padding-left: 20px;\r\n`\r\n\r\nconst FlagContainer = styled.div`\r\n  width: 100%;\r\n  height: 50%;\r\n\r\n  background-image: url(${ ({ flagUrl }) => flagUrl });\r\n  background-size: cover;\r\n`\r\n\r\nexport{ Container, Flag, Name, InfoContainer, FlagContainer }","import styled from 'styled-components'\r\n\r\n\r\nconst Info = styled.p`\r\n  margin: 0;\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst Data = styled.span`\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Borders = styled.span`\r\n  width: 80px;\r\n  margin-top: 10px;\r\n  margin-left: 5px;\r\n  padding: 5px;\r\n  background-color: ${ ({theme}) => theme.colors.Elements };\r\n  text-align: center;\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.2);\r\n  display: inline-block;\r\n  cursor: pointer;\r\n\r\n  grid-colum: 1 / -1;\r\n  grid-row: 5 / 6\r\n\r\n  ${Data}{\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nexport{Info, Data, Borders}\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  // No deberia dejar la url aqui\r\n  baseURL: process.env.REACT_APP_COUNTRIES || \"https://restcountries.eu/rest/v2/\"\r\n});\r\n\r\nexport default instance","import React, { Fragment } from 'react'\r\nimport { Info, Data, Borders } from './RenderInfoStyled'\r\n\r\n// ROUTER\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from '../../axios-orders'\r\n\r\nfunction RenderInfo({ info, array }) {\r\n\r\n  let history = useHistory();\r\n  const CountryInfo = []\r\n  let domains = [];\r\n  let currencies = [];\r\n  let borders = []\r\n\r\n  const onClickHandler = ( alpha ) => {\r\n    \r\n    let countryName = \"\"\r\n\r\n    axios.get(`/alpha/${alpha}?fields=name`)\r\n      .then( ({ data }) => {\r\n        countryName = data.name\r\n\r\n        history.push(`/${countryName}`)\r\n      })\r\n  }\r\n  \r\n    \r\n  for( let [key, value] of Object.entries(info) ){\r\n\r\n    let number = value\r\n\r\n    if( typeof number === 'number' ){\r\n      number = value.toLocaleString();\r\n      number = number.replaceAll('.',',')\r\n    }\r\n    CountryInfo.push(<Info key={key} >{key}: <Data key={number}>{ number }</Data></Info>)\r\n  }\r\n\r\n\r\n  // If array prop is present, do this code\r\n  if( array ){\r\n    for( let [key, value] of Object.entries(array)){\r\n      value.map( index => {\r\n        switch( key ){\r\n          case 'Top Level Domain':\r\n              domains.push(<Data key={index} style={{ textTransform: 'none' }} >{index}</Data>)\r\n            break;\r\n          case 'Currencies':\r\n            currencies.push(<Data key={index.name} >{`${index.name} `}</Data>)\r\n            break;\r\n          case 'Borders':\r\n              borders.push(\r\n                <Borders key={index} onClick={ () => onClickHandler(index) } >\r\n                  <Data key={index} >{index}</Data>\r\n                </Borders>\r\n              );\r\n            break;\r\n          default:\r\n          break;\r\n        }\r\n        return false;\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n  return (\r\n    <Fragment>\r\n      {CountryInfo}\r\n      {\r\n        array === undefined ? <></> :\r\n        <Fragment>\r\n          <Info >Top Level Domain: {domains} </Info>\r\n          <Info >Currencies: {currencies} </Info>\r\n          <Info style={{ gridColumn: '1/-1' }} >Borders Countries: {borders} </Info>\r\n        </Fragment>\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RenderInfo\r\n","import { memo } from 'react';\r\nimport { Container, Name, FlagContainer, InfoContainer } from './CardStyle'\r\n\r\n//COMPONENTS\r\nimport RenderInfo from '../../UI/RenderInfo'\r\n\r\n// ROUTER\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default memo(function Card({ flag, name, info}) {  \r\n\treturn (\r\n    <Link to={`/${name}`}>\r\n      <Container>\r\n        <FlagContainer flagUrl={flag} alt={`${name} flag`}></FlagContainer>\r\n        <InfoContainer>\r\n          <Name>{name}</Name>\r\n          <RenderInfo info={info} />\r\n        </InfoContainer>\r\n      </Container>\r\n    </Link>\r\n  );\r\n})\r\n","import { useState, useEffect } from 'react'\r\nimport { Container } from './CardsStyled'\r\n\r\n// COMPONENTS\r\nimport Card from './Card/Card'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nfunction Cards({ countries }) {\r\n\r\n\tconst [count, setCount] = useState({\r\n\t\tprev: 0,\r\n\t\tnext: 16,\r\n\t})\r\n\r\n\tconst [hasMore, setHasMore] = useState(true)\r\n\t\r\n\tconst [current, setCurrent] = useState(countries.slice(count.prev, count.next))\r\n\r\n\tconst getMoreData = () => {\r\n\t\tif( current.length === countries.length ){\r\n\t\t\tsetHasMore( false );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetCurrent(current.concat(countries.slice(count.prev + 16, count.next + 16)))\r\n\t\t}, 2000)\r\n\t\tsetCount( prevState => ({ prev: prevState.prev + 16, next: prevState.next + 16 }))\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetHasMore( true )\r\n\t\tsetCurrent(countries.slice( 0, 16));\r\n\t\tsetCount(({ prev: 0, next: 16 }));\r\n\t}, [countries] )\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<InfiniteScroll\r\n\t\t\tdataLength={current.length}\r\n\t\t\tnext={getMoreData}\r\n\t\t\thasMore={hasMore}\r\n\t\t\tloader={<h2 style={{width: '100%', textAlign: 'center' }}>Loading...</h2>}\r\n\t\t\tstyle={{ display: 'flex', justifyContent:'space-between', flexWrap: 'wrap' }} >\r\n\t\t\t\t{current && current.map( (country, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tflag={country.flag}\r\n\t\t\t\t\t\t\tname={country.name}\r\n\t\t\t\t\t\t\tinfo={{\r\n\t\t\t\t\t\t\t\tpopulation: country.population,\r\n\t\t\t\t\t\t\t\tregion: country.region,\r\n\t\t\t\t\t\t\t\tcapital: country.capital,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</InfiniteScroll>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Cards\r\n","import { createContext } from 'react'\r\n\r\nexport const CountryContext = createContext();\r\n","import { useContext } from 'react'\r\nimport { Container } from './ContentStyled';\r\n\r\n//COMPONENTS\r\nimport Cards from '../Cards/Cards';\r\n\r\n// CONTEXT\r\nimport { CountryContext } from '../../Context/CountryContext';\r\n\r\nfunction Content() {\r\n\r\n\tconst { countries } = useContext(CountryContext)\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{countries.length === 0 ? (\r\n\t\t\t\t<p>Loading...</p>\r\n\t\t\t) : (\r\n\t\t\t\t<Cards countries={countries} />\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Content\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/mediaQueries'\r\n\r\nconst Container = styled.div`\r\n  padding: 40px;\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n`\r\n\r\nconst SearchContainer = styled.div`\r\n  width: 35%;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.2);\r\n\r\n  @media${device.tablet}{\r\n    width: 100%;\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n  }\r\n`\r\n\r\nconst Input = styled.input.attrs( () => ({ type: 'text', placeholder: 'Search for a country...' }))`\r\n  width: 90%;\r\n  background: none;\r\n  border: none;\r\n  margin: 5px 0px;\r\n  padding: 0 20px;\r\n\r\n  &:focus{\r\n    outline:none;\r\n    color: ${ ({ theme }) => theme.colors.Text };\r\n  }\r\n`\r\n\r\nconst Continents = styled.select`\r\n  padding: 15px;\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  border-color: ${ ({ theme }) => theme.colors.Elements };\r\n  cursor: pointer;\r\n  \r\n  border-radius: 5px;\r\n\r\n  // Arrow\r\n  appearance: none;\r\n\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n\r\n  &:hover{\r\n    outline: none;\r\n  }\r\n\r\n  @media${device.tablet}{\r\n    align-self: start;\r\n  }\r\n`\r\n\r\nconst Continent = styled.option`\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n`\r\nconst ContinentsConteiner = styled.div`\r\n  cursor: pointer;\r\n  padding-right: 10px;\r\n  border-radius: 5px;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.2);\r\n`\r\n\r\nexport { Container, SearchContainer, Input, Continents, Continent, ContinentsConteiner }","import { memo, useContext } from 'react'\r\nimport { Container, Continent, Continents, ContinentsConteiner, Input, SearchContainer } from './FiltersStyled'\r\n\r\n// FONT AWESOME\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n// CONTEXT\r\nimport { CountryContext } from '../../Context/CountryContext';\r\n\r\nexport default memo(function Filters() {\r\n\r\n\tconst { getCountry, getCountriesByContinent } = useContext(CountryContext);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<SearchContainer>\r\n\t\t\t\t<FontAwesomeIcon icon={ 'search' } />\r\n\t\t\t\t<Input onChange={ ( event ) => getCountry( event ) } id='country' />\r\n\t\t\t</SearchContainer>\r\n\r\n\t\t\t<ContinentsConteiner >\r\n\t\t\t\t<Continents onChange={ ( event ) => getCountriesByContinent( event ) } id=\"mySelect\" >\r\n\t\t\t\t\t<Continent disabled>Filter By Continent</Continent>\r\n\t\t\t\t\t<Continent value='all' >All</Continent>\r\n\t\t\t\t\t<Continent value='africa' >Africa</Continent>\r\n\t\t\t\t\t<Continent value='americas' >Americas</Continent>\r\n\t\t\t\t\t<Continent value='asia' >Asia</Continent>\r\n\t\t\t\t\t<Continent value='europe' >Europe</Continent>\r\n\t\t\t\t\t<Continent value='oceania' >Oceania</Continent>\r\n\t\t\t\t</Continents>\r\n\t\t\t\t<FontAwesomeIcon icon={ 'chevron-down' } />\r\n\t\t\t</ContinentsConteiner>\r\n\r\n\t\t</Container>\r\n\t)\r\n})\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/mediaQueries';\r\n\r\nconst HeaderStyle = styled.header`\r\n  position:relative;\r\n  z-index:10;\r\n  height: 70px;\r\n  padding: 0 40px;\r\n  background-color: ${({ theme }) => theme.colors.Elements };\r\n  box-shadow: 0 0px 10px hsla(0, 0%, 0%, 0.2);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  h1{\r\n    color: ${ ({ theme }) => theme.colors.Text };\r\n\r\n    @media${device.tablet}{\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`\r\n\r\nconst Toggler = styled.label`\r\n  color: ${ ({ theme }) => theme.colors.Text };\r\n\r\n  svg{\r\n    margin-right: 10px;\r\n  }\r\n\r\n  &:hover{\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ThemeChanger = styled.div``\r\n\r\nconst Input = styled.input.attrs( () => ( {type: 'checkbox'} ))`\r\n  visibility: hidden;\r\n`\r\n\r\nexport{ HeaderStyle, Toggler, ThemeChanger, Input }\r\n","const theme = {\r\n  lightTheme: {\r\n    colors: {\r\n      Text: \"hsl(200, 15%, 8%)\",\r\n      Elements: \"hsl(0, 0%, 100%)\",\r\n      Background: \"hsl(0, 0%, 98%)\",\r\n      Input: \"hsl(0, 0%, 52%)\",\r\n    },\r\n    mode: \" Mode Dark\",\r\n    icon: \"moon\",\r\n    transition: \"0.5s\",\r\n  },\r\n  darkTheme: {\r\n    colors: {\r\n      Text: \"hsl(0, 0%, 100%)\",\r\n      Elements: \"hsl(209, 23%, 22%)\",\r\n      Background: \"hsl(207, 26%, 17%)\",\r\n    },\r\n    icon: \"sun\",\r\n    mode: \"Light Mode\",\r\n    transition: \"0.5s\",\r\n  },\r\n};\r\n\r\nexport default theme;","import React, { createContext, useState } from 'react'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport theme from './styles/theme'\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [ themeMode, setThemeMode ] = useState(\"lightTheme\");\r\n  const toggleTheme = () => {\r\n    setThemeMode((prevState) => {\r\n      if (prevState === \"lightTheme\") {\r\n        return \"darkTheme\";\r\n      } else {\r\n        return \"lightTheme\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const value = { themeMode, toggleTheme };\r\n  const costumeTheme = theme[themeMode];\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      <ThemeProvider theme={costumeTheme}>\r\n        {children}\r\n      </ThemeProvider>\r\n    </AppContext.Provider>)\r\n}\r\n\r\nexport default AppProvider;","import { useContext, memo } from 'react'\r\nimport { HeaderStyle, ThemeChanger, Input, Toggler } from './HeaderStyled'\r\nimport theme from '../../styles/theme'\r\n\r\n//FONT AWERSOME\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n//CONTEXT\r\nimport { AppContext } from '../../AppProvider';\r\n\r\nexport default memo(function Header() {\r\n\r\n  const { toggleTheme, themeMode } = useContext(AppContext);\r\n\r\n  return (\r\n    <HeaderStyle>\r\n      <h1>Where in the world?</h1>\r\n\r\n      <ThemeChanger>\r\n        <Input id=\"Theme\" onChange={ toggleTheme } />\r\n        <Toggler htmlFor=\"Theme\" >\r\n          <FontAwesomeIcon icon={ theme[themeMode].icon } />\r\n          { theme[themeMode].mode }\r\n        </Toggler>\r\n      </ThemeChanger> \r\n    </HeaderStyle>\r\n  )\r\n})\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/mediaQueries'\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  min-height: calc(100vh - 70px);\r\n  padding: 40px;\r\n  background-color: ${ ({ theme }) => theme.colors.Background };\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n`\r\nconst InfoContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  \r\n  @media${device.tablet}{\r\n    margin-top: 40px;\r\n    flex-flow: column wrap;\r\n  }\r\n`\r\n\r\nconst FlagContainer = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n\r\n  @media${device.tablet}{\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Flag = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst BorderText = styled.p`\r\n  color: ${ ({theme}) => theme.colors.Text };\r\n`\r\n\r\nconst Borders = styled.div``\r\n\r\nconst BackBtn = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  background-color: ${ ({ theme }) => theme.colors.Elements };\r\n  box-shadow: 0 0 10px hsla(0, 0%, 0%, 0.3);\r\n  border-radius: 10px;\r\n\r\n  color: ${ ({theme}) => theme.colors.Text };\r\n\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-content: center;\r\n  cursor: pointer;\r\n\r\n  a{\r\n    color: ${ ({theme}) => theme.colors.Text };\r\n    text-decoration: none;\r\n  }\r\n\r\n  a:visited{\r\n    color: ${ ({theme}) => theme.colors.Text };\r\n  }\r\n`\r\n\r\nconst DataContainer = styled.div`\r\n  width:50%;\r\n  min-height: 100%;\r\n  padding-left: 40px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-tempplate-rows: auto;\r\n  grid-gap: 10px;\r\n\r\n  p{\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media${device.tablet}{\r\n    width: 100%;\r\n    padding-left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    p{\r\n      font-size: 18px;\r\n    }\r\n  }\r\n`\r\n\r\nconst H2 = styled.h2`\r\n  color: ${ ({theme}) => theme.colors.Text };\r\n  grid-column: 1/-1;\r\n`\r\n\r\nexport{ Container, FlagContainer, Flag, BorderText, Borders, BackBtn, InfoContainer, DataContainer, H2 }","import { useState, useEffect } from 'react'\r\nimport { Container, BackBtn, InfoContainer, FlagContainer, Flag, DataContainer, H2 } from './CountryInfoStyled'\r\n\r\n//ROUTER\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport axios from '../../axios-orders'\r\n\r\n// COMPONENTS\r\nimport RenderInfo from '../UI/RenderInfo'\r\n\r\n// FONT AWESOME\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nfunction CountryInfo() {\r\n\r\n  const params = useParams()\r\n  const [country, setCountry] = useState({})\r\n\r\n  useEffect(() => {\r\n    axios.get(`/name/${params.country}?fields=flag;name;nativeName;population;region;subregion;capital;topLevelDomain;currencies;borders`)\r\n    .then( info => {\r\n      setCountry( ...info.data );\r\n    })\r\n    .catch( error => console.log( error ))\r\n\r\n    return () => {\r\n      setCountry({});\r\n    }\r\n\r\n  }, [params.country]);\r\n\r\n  return (\r\n    <Container>\r\n        <Link to=\"/\" style={{ textDecoration: 'none', width: '100px' }} >\r\n          <BackBtn>\r\n            <FontAwesomeIcon icon={ 'arrow-left' } />\r\n            Back \r\n          </BackBtn>\r\n        </Link>\r\n      { Object.entries(country).length === 0 ? (<p>Loading...</p>)\r\n        :\r\n        <InfoContainer>\r\n          <FlagContainer>\r\n            <Flag src={country.flag} />\r\n          </FlagContainer>\r\n          <DataContainer>\r\n            <H2>{country.name}</H2>\r\n            <RenderInfo \r\n              info={{\r\n                \"Native Name\": country.nativeName,\r\n                \"Population\": country.population,\r\n                \"Region\": country.region,\r\n                \"Sub Region\": country.subregion,\r\n                \"Capital\": country.capital,}} \r\n              array={{\r\n                \"Top Level Domain\": country.topLevelDomain,\r\n                \"Currencies\": country.currencies,\r\n                \"Borders\": country.borders }}  />\r\n          </DataContainer>\r\n        </InfoContainer>\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CountryInfo\r\n","import { useContext, useEffect } from 'react'\r\n\r\n// ROUTER\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n// COMPONENTS\r\nimport Content from '../Content/Content'\r\nimport Filters from '../FIlters/Filters'\r\nimport Header from '../Header/Header'\r\nimport CountryInfo from '../County_Info/CountryInfo'\r\n\r\n// CONTEXT\r\nimport { CountryContext } from '../../Context/CountryContext'\r\n\r\n\r\nfunction Layout() {\r\n\tconst { getCountries } = useContext(CountryContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCountries();\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path=\"/\" exact>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Filters />\r\n\t\t\t\t<Content />\r\n\t\t\t</Route>\r\n\t\t\t<Route path=\"/:country\">\r\n\t\t\t\t<Header />\r\n\t\t\t\t<CountryInfo />\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n}\r\n\r\nexport default Layout\r\n","\r\nexport default function CountryReducer(state, { type, payload, continent }) {\r\n\t\r\n\tswitch (type) {\r\n\t\tcase \"get all\":\r\n\t\t\treturn { original: payload, filtered: payload, continent: 'all' };\r\n\r\n\t\tcase \"get input\":\r\n\t\t\treturn { original: state.original, filtered: payload, continent: 'all' };\r\n\r\n\t\tcase \"get continent\":\r\n\t\t\treturn { original: state.original, filtered: payload, continent: continent };\r\n\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}","import { useReducer } from 'react'\r\nimport { CountryContext } from './CountryContext'\r\nimport CountryReducer from './CountryReducer'\r\n\r\nimport axios from '../axios-orders'\r\n\r\nconst initialState = { original: [], filtered: [], continent: 'all' }\r\n\r\nexport default function CountryState({ children }) {\r\n\t\r\n\tconst [countries, dispatch] = useReducer(CountryReducer, initialState);\r\n\r\n\tconst getCountries = () => {\r\n\t\taxios\r\n\t\t\t.get(\"/all?fields=name;population;region;capital;flag\")\r\n\t\t\t.then(({ data }) => {\r\n\t\t\t\tdispatch({ type: \"get all\", payload: data })\r\n\t\t\t})\r\n\t\t\t.catch((error) => error);\r\n\t}\r\n\r\n\tconst getCountry = ( event ) => {\r\n\t\tconsole.log( \"updated\" )\r\n\t\tlet country = event.target.value;\r\n\r\n\t\tif (country !== \"\") {\r\n\t\t\taxios\r\n\t\t\t\t.get(`name/${country}?fullText=false`)\r\n\t\t\t\t.then(({ data }) => {\r\n\t\t\t\t\tdispatch({ type: 'get input', payload: data });\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => console.log(error));\r\n\t\t} else if (country === \"\") {\r\n\t\t\tdispatch({ type: 'get input', payload: countries.original });\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst getCountriesByContinent = ( event ) => {\r\n\t\tlet continent = event.target.value;\r\n\r\n\t\tif( continent !== 'all' ){\r\n\t\t\taxios.get(`/region/${continent}?fields=name;population;region;capital;flag`)\r\n\t\t\t.then( ({ data }) => {\r\n\t\t\t\tdispatch({ type:'get continent', payload: data })\r\n\t\t\t})\r\n\t\t\t.catch( error => console.log(error) );\r\n\t\t}else{\r\n\t\t\taxios.get(`/${continent}?fields=name;population;region;capital;flag`)\r\n\t\t\t.then( ({ data }) => {\r\n\t\t\t\tdispatch({ type:'get continent', payload: data, continent: continent })\r\n\t\t\t})\r\n\t\t\t.catch( error => ( console.log(error) ));\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CountryContext.Provider value={{\r\n\t\t\tcountries: countries.filtered,\r\n\t\t\tcontinent: countries.continent,\r\n\t\t\tgetCountry,\r\n\t\t\tgetCountries,\r\n\t\t\tgetCountriesByContinent }} >\r\n\t\t\t{children}\r\n\t\t</CountryContext.Provider>\r\n\t)\r\n}\r\n","import Layout from \"./components/Layout/Layout\";\r\n\r\n// FONT AWESOME\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faSun, faMoon, faSearch, faChevronDown, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// ROUTER\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\n// CONTEXT\r\nimport CountryState from \"./Context/CountryState\";\r\n\r\nfunction App() {\r\n\r\n\tlibrary.add( faSun, faMoon, faSearch, faChevronDown, faArrowLeft );\r\n\r\n\treturn (\r\n\t\t<Router >\r\n\t\t\t<CountryState>\r\n\t\t\t\t<Layout />\r\n\t\t\t</CountryState>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'normalize.css'\r\nimport AppProvider from './AppProvider';\r\n\r\nReactDOM.render(\r\n  <AppProvider>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </AppProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}